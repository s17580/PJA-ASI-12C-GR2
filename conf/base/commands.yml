# DecisionTreeClassifier with different parameters and small test set:
kedro run --params="machine_learning.decision_tree.classifier_type='DecisionTreeClassifier',machine_learning.decision_tree.max_depth=12,machine_learning.decision_tree.min_samples_split=5,machine_learning.decision_tree.random_state=101,split_data.test_size=0.1,split_data.val_size=0.2,split_data.random_state=101"

# RandomForestClassifier with high number of estimators and big test set:
kedro run --params="machine_learning.random_forest.classifier_type='RandomForestClassifier',machine_learning.random_forest.n_estimators=300,machine_learning.random_forest.max_depth=20,machine_learning.random_forest.random_state=102,split_data.test_size=0.3,split_data.val_size=0.2,split_data.random_state=102"

# SVC with a low C parameter and linear kernel for potential generalization improvement:
kedro run --params="machine_learning.svc.classifier_type='SVC',machine_learning.svc.C=0.5,machine_learning.svc.kernel='linear',machine_learning.svc.gamma='auto',machine_learning.svc.random_state=103,split_data.test_size=0.15,split_data.val_size=0.25,split_data.random_state=103"

# GradientBoostingClassifier with very low learning rate for analyzing influence on machine learning process speed:
kedro run --params="machine_learning.gradient_boosting.classifier_type='GradientBoostingClassifier',machine_learning.gradient_boosting.n_estimators=150,machine_learning.gradient_boosting.learning_rate=0.01,machine_learning.gradient_boosting.max_depth=4,machine_learning.gradient_boosting.random_state=104,split_data.test_size=0.25,split_data.val_size=0.1,split_data.random_state=104"

# RandomForestClassifier with very high depth and a small number of trees:
kedro run --params="machine_learning.random_forest.classifier_type='RandomForestClassifier',machine_learning.random_forest.n_estimators=50,machine_learning.random_forest.max_depth=30,machine_learning.random_forest.random_state=105,split_data.test_size=0.2,split_data.val_size=0.3,split_data.random_state=105"
###
# SVC with a high C parameter and a different kernel:
kedro run --params="machine_learning.svc.classifier_type='SVC',machine_learning.svc.C=2.0,machine_learning.svc.kernel='poly',machine_learning.svc.gamma='scale',machine_learning.svc.random_state=106,split_data.test_size=0.2,split_data.val_size=0.2,split_data.random_state=106"

# DecisionTreeClassifier with maximum depth and varying samples for splitting:
kedro run --params="machine_learning.decision_tree.classifier_type='DecisionTreeClassifier',machine_learning.decision_tree.max_depth=None,machine_learning.decision_tree.min_samples_split=10,machine_learning.decision_tree.random_state=107,split_data.test_size=0.1,split_data.val_size=0.1,split_data.random_state=107"

# GradientBoostingClassifier with a large number of estimators and different learning rates:
kedro run --params="machine_learning.gradient_boosting.classifier_type='GradientBoostingClassifier',machine_learning.gradient_boosting.n_estimators=200,machine_learning.gradient_boosting.learning_rate=0.2,machine_learning.gradient_boosting.max_depth=5,machine_learning.gradient_boosting.random_state=108,split_data.test_size=0.25,split_data.val_size=0.15,split_data.random_state=108"

# SVC with the gamma parameter set to 'auto' for different kernels:
kedro run --params="machine_learning.svc.classifier_type='SVC',machine_learning.svc.C=1.2,machine_learning.svc.kernel='rbf',machine_learning.svc.gamma='auto',machine_learning.svc.random_state=109,split_data.test_size=0.2,split_data.val_size=0.3,split_data.random_state=109"

# RandomForestClassifier with different settings for bootstrap and random state:
kedro run --params="machine_learning.random_forest.classifier_type='RandomForestClassifier',machine_learning.random_forest.n_estimators=100,machine_learning.random_forest.max_depth=15,machine_learning.random_forest.bootstrap=false,machine_learning.random_forest.random_state=110,split_data.test_size=0.15,split_data.val_size=0.25,split_data.random_state=110"
